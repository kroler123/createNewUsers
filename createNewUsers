#!groovy
// Check properties
properties([disableConcurrentBuilds()])

pipeline {
        agent {
                label 'master'
        }
        parameters {

		string(name: 'login', defaultValue: 'null', description: 'Введите логин')

		string(name: 'pass', defaultValue: '', description: 'Введите пароль')

		string(name: 'fName', defaultValue: '', description: 'Введите имя')

		string(name: 'sName', defaultValue: '', description: 'Введите фамилию')

		choice(name: 'ou', choices: ['Salon Admins','Salon Users'],description: 'Выберите права')

		booleanParam(name: 'GroupRD',defaultValue: true, description: 'Использовать группу удалённого доступа?')

		booleanParam(name: 'GroupAdmin',defaultValue: false, description: 'Использовать группу Администратор?')

		choice(name: 'task', choices: ['create','management'],description: 'Выберите задачу - Create = Создание , Management - Включение или отключение аккаунта ')

		booleanParam(name: 'account',defaultValue: false, description: 'Включить или выключить пользователя')

	}
        options {
                buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
                timestamps()
                skipStagesAfterUnstable()
                disableConcurrentBuilds()
        }
	stages {
                stage("Скачиваем базу в файл") {
                        steps {
                                script {
                                        sh (script: 'mysql -h 192.168.102.2 -u kalinkin -p159753 -Bse "SELECT Domain_Controller FROM rbt WHERE virtual = \'proxmox\' AND Domain_Controller" -D RBT > DB',label: 'Download DB in the file \"DB\"')
                                }
                        }
                }
		stage("Чтение файла") {
			when {
				expression { params.task == "create" }
			}
			steps {
				script {
					sh (script: '''#!/bin/bash
							while read line 
							do 
							echo $line
							test=`fping "$line"`
							if [ "$test" == "$line is alive" ];then
								echo "login - $login , OU = $ou , Name = $fName $sName , Group = $GroupRD $GroupAdmin"
								ssh -o 'StrictHostKeyChecking no' root@"$line" "/usr/local/samba/bin/samba-tool user create $login $pass --userou='OU=$ou' --given-name=$fName --surname=$sName --script-path=login.bat" < /dev/null
							if [ "$GroupRD" == true ]; then
								ssh -o 'StrictHostKeyChecking no' root@"$line" "/usr/local/samba/bin/samba-tool group addmembers 'Remote Desktop Users' $login" < /dev/null	
							fi
							if [ "$GroupAdmin" == true ]; then
								ssh -o 'StrictHostKeyChecking no' root@"$line" "/usr/local/samba/bin/samba-tool group addmembers 'Domain Admins' $login" < /dev/null
							fi
							fi
							done < DB
							''',label: 'Добавляем пользователями')
				}
			}
		}
		stage("Вкл/выкл аккаунт") {
			when {
				expression { params.task == "management" }
			}
			steps {
				script {
					sh (script: '''#!/bin/bash
							if [ "$account" == true ];then
							text='будет включён' 
							act="enable"
							else
							text='будет отключён'
							act="disable"
							fi
							while read line
							do
							echo $line
							test=`fping "$line"`
							if [ "$test" == "$line is alive" ];then
							echo "Пользователь $login $text"
							ssh -o 'StrictHostKeyChecking no' root@"$line" "/usr/local/samba/bin/samba-tool user $act $login" < /dev/null
							fi
							done < DB
							''',label: 'Управление пользователями')
				}
			}
		}
	}
}
